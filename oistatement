#!/usr/bin/env python

import sys, os, json, pdfkit
from uuid import uuid4
from xvfbwrapper import Xvfb
from jinja2 import Template


task_md = os.path.realpath(sys.argv[1])
root = os.path.dirname(task_md)
task_json = os.path.join(root, os.path.splitext(task_md)[0] + '.json')
task_pdf = os.path.join(root, os.path.splitext(task_md)[0] + '.pdf')
task_info = json.loads(open(task_json, 'r').read())
script_dir = os.path.dirname(os.path.realpath(__file__))

# Render PDF Template
template_html = os.path.join(script_dir, "template.html")
with open(template_html) as f:
    template = Template(f.read())

context = {
    'content': open(task_md, 'r').read().encode().decode('utf-8'),
    'task_name': task_info['task_name'],
    'contest': task_info['contest'],
    'language': task_info['language'],
    'images_path': root,
    'static_path': os.path.join(script_dir, 'static'),
}

pdf_options = {
    'page-size': 'A4',
    'margin-left': '0.75in',
    'margin-right': '0.75in',
    'margin-top': '0.62in',
    'margin-bottom': '1in',
    'print-media-type': '',
    'no-stop-slow-scripts': '',
    'javascript-delay': '30000',
    'enable-local-file-access': '',
}

# Make PDF
html = template.render(context)
html_path = '/tmp/{}.html'.format(str(uuid4()))
with open(html_path, 'wb') as f:
    f.write(html.encode('utf-8'))
# open("out.html", 'wb').write(html.encode('utf-8'))
with Xvfb():
    pdfkit.from_file(html_path, task_pdf, options=pdf_options)
os.remove(html_path)

# Add footer
color = '-color "0.4 0.4 0.4" '
cmd = ('{0} -add-text "{1} (%Page of %EndPage)   " -font "Arial" ' + color +
       '-font-size 10 -bottomright .62in "{2}" -o "{2}"').format(os.path.join(script_dir, 'cpdf', 'cpdf'), task_info['task_name'].capitalize(), task_pdf)
os.system(cmd)
